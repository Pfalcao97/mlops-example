name: Deploy to Cloud Run from Dockerfile in Github

on:
  push:
    branches: [ "main" ]

env:
  REPOSITORY: 'mlops-example'
  APP_NAME: 'sintetize-app'
  REGION: 'us-central1'

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code so that workflow can access it
        uses: actions/checkout@v4 #https://github.com/actions/checkout

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install pytest

      - name: Run tests with pytest
        run: pytest ./tests/test.py

      - name: Install the gcloud cli on actions ubuntu machine
        uses: google-github-actions/setup-gcloud@v0 #https://github.com/google-github-actions/setup-gcloud
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT }}
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_CREDENTIALS }}
          export_default_credentials: true

      - name: Build and push the docker image to Artifact using gcloud
        env:
          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          docker build -t ${{ env.REGION }}-docker.pkg.dev/$GOOGLE_PROJECT/${{ env.REPOSITORY }}/${{ env.APP_NAME }}:latest .
          docker push ${{ env.REGION }}-docker.pkg.dev/$GOOGLE_PROJECT/${{ env.REPOSITORY }}/${{ env.APP_NAME }}:latest

      - name: Run container from Artifact Image
        run: >
          gcloud run deploy ${{ env.APP_NAME }} 
          --image ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/${{ env.REPOSITORY }}/${{ env.APP_NAME }}:latest  
          --project ${{ secrets.GOOGLE_PROJECT }} 
          --region ${{ env.REGION }} 
          --port 8000

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
